<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Visualization on Devashree Madhugiri</title>
    <link>https://devashree21.github.io/devashree-madhugiri/tags/data-visualization/</link>
    <description>Recent content in Data Visualization on Devashree Madhugiri</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Nov 2021 11:25:05 -0400</lastBuildDate><atom:link href="https://devashree21.github.io/devashree-madhugiri/tags/data-visualization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How To Use Python To Analyse Fitness Tracker Market: Step By Step EDA 📈📊</title>
      <link>https://devashree21.github.io/devashree-madhugiri/post/chapter-11/</link>
      <pubDate>Wed, 10 Nov 2021 11:25:05 -0400</pubDate>
      
      <guid>https://devashree21.github.io/devashree-madhugiri/post/chapter-11/</guid>
      <description>Fitness wearables are a trend today. With various players in the market offering trackers and smartwatches for the fitness concious individuals, it is interesting to explore the wide array of products in this market based on their features, prices, reviews and ratings.In this project, we analyze the fitness trackers&#39; market in India using Python. First we scrape the required data and later visualize it to generate interesting insights about the current situation of the market.</description>
    </item>
    
    <item>
      <title>🌳 How To Build A Treemap In 3 Ways Using Python 🌳</title>
      <link>https://devashree21.github.io/devashree-madhugiri/post/chapter-9/</link>
      <pubDate>Tue, 26 Oct 2021 11:25:05 -0400</pubDate>
      
      <guid>https://devashree21.github.io/devashree-madhugiri/post/chapter-9/</guid>
      <description>Data visualizations enable us to display vital information in a dataset. With several categories, displaying information for comparison becomes a challenging task with regular bar charts. In such case, using Treemap is a convenient way to visualize nested hierarchical data.In this article, I share the basics of treemaps with their use cases. Further, I present three different ways to build treemaps in Python using open-source libraries - Matplotlib, Seaborn+Squarify, and Pygal.</description>
    </item>
    
    <item>
      <title>EDA challenge🏅</title>
      <link>https://devashree21.github.io/devashree-madhugiri/projects/chapter-9/</link>
      <pubDate>Sat, 25 Sep 2021 11:25:05 -0400</pubDate>
      
      <guid>https://devashree21.github.io/devashree-madhugiri/projects/chapter-9/</guid>
      <description>I created this Dashboard viz for an EDA contest held on Youtube.  Read more about the contest viz here.</description>
    </item>
    
    <item>
      <title>Restaurant Food Delivery Time⌚</title>
      <link>https://devashree21.github.io/devashree-madhugiri/projects/chapter-8/</link>
      <pubDate>Thu, 16 Sep 2021 11:25:05 -0400</pubDate>
      
      <guid>https://devashree21.github.io/devashree-madhugiri/projects/chapter-8/</guid>
      <description>My contest entry- A Power BI Dashboard for a Food delivery time dataset with 11095 rows x 9 columns.  This Viz has been featured in the article by AnalyticsIndiaMag.</description>
    </item>
    
    <item>
      <title>Better EDA with 3 Easy Python Libraries for Any Beginner🔮✨</title>
      <link>https://devashree21.github.io/devashree-madhugiri/post/chapter-4/</link>
      <pubDate>Thu, 12 Aug 2021 11:14:48 -0400</pubDate>
      
      <guid>https://devashree21.github.io/devashree-madhugiri/post/chapter-4/</guid>
      <description>EDA is a time consuming process and requires some experience when it comes to presenting the insights from a given dataset. It is quite likely that any beginner would get overwhelmed with the existing array of Data Visualization libraries. Hence, AutoEDA is a good solution when you need a quick overview of the chosen dataset. In this blog post, I have shared a beginner-friendly tutorial of 3 important AutoEDA libraries - PandasProfiling, Sweetviz and AutoViz.</description>
    </item>
    
  </channel>
</rss>
